version: '3.8'

services:
  # 后端应用服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pfa_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-mysql+pymysql://financial_user:financial123@mysql:3306/financial_db}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - DEBUG=false
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - OPENAI_MODEL=${OPENAI_MODEL}
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pfa_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: pfa_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123}
      MYSQL_DATABASE: financial_db
      MYSQL_USER: financial_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-financial123}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./database/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - pfa_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "financial_user", "-p${MYSQL_PASSWORD:-financial123}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis缓存服务
  redis:
    image: redis:7.2-alpine
    container_name: pfa_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./database/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - pfa_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx反向代理（可选，用于生产环境）
  nginx:
    image: nginx:alpine
    container_name: pfa_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - pfa_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  pfa_network:
    driver: bridge 